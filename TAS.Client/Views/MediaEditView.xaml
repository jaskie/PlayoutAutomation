<UserControl ResxExtension.DefaultResxName="TAS.Client.Views.MediaEditView" Language="{UICulture}"
             x:Class="TAS.Client.Views.MediaEditView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:views="clr-namespace:TAS.Client.Views"
             xmlns:vm="clr-namespace:TAS.Client.ViewModels"
             xmlns:controls="clr-namespace:TAS.Client.Common.Controls;assembly=TAS.Client.Common"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance {x:Type vm:MediaEditViewmodel}}"
             d:DesignWidth="300"
             >
    <UserControl.InputBindings>
        <KeyBinding Command="{Binding CommandSaveEdit}" Gesture="Ctrl+S" />
    </UserControl.InputBindings>
    <Grid MinWidth="200" >
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Visibility="{Binding ShowButtons, Converter={StaticResource BoolToVis}}" FlowDirection="RightToLeft" Orientation="Horizontal" Height="37">
            <Button Command="{Binding CommandSaveEdit}" Style="{StaticResource OkButtonStyle}"/>
            <Button Command="{Binding CommandCancelEdit}" Style="{StaticResource UndoButtonStyle}"/>
        </StackPanel>
        <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
            <StackPanel Grid.IsSharedSizeScope="True">
                <StackPanel.Resources>
                    <Style TargetType="Label">
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="HorizontalContentAlignment" Value="Right" />
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="Grid.Column" Value="0"/>
                    </Style>
                    <Style TargetType="TextBox">
                        <Setter Property="Margin" Value="5, 3" />
                        <Setter Property="Grid.Column" Value="1"/>
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)/ErrorContent}"/>
                            </Trigger>
                            <Trigger Property="IsReadOnly" Value="True">
                                <Setter Property="Background" Value="#F0F0F0" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="controls:TimecodeEdit" >
                        <Setter Property="Margin" Value="5, 3" />
                        <Setter Property="Grid.Column" Value="1"/>
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)/ErrorContent}"/>
                            </Trigger>
                            <Trigger Property="IsReadOnly" Value="True">
                                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="CheckBox">
                        <Setter Property="Margin" Value="5, 2" />
                    </Style>
                    <Style TargetType="ComboBox" >
                        <Setter Property="Margin" Value="5, 3" />
                        <Setter Property="Grid.Column" Value="1"/>
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)/ErrorContent}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Resources>
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="labels"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Label Content="{Resx _clipName}"/>
                    <TextBox IsReadOnly="{Binding IsPersistentMedia, Converter={StaticResource InvertedBoolToVis}}" Text="{Binding MediaName, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                </Grid>
                <Grid Visibility="{Binding IsIngestDataShown, Converter={StaticResource BoolToVis}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="labels"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Label Content="{Resx _ingestTime}" />
                    <TextBox IsReadOnly="True" Text="{Binding LastUpdated, Mode=OneWay, Converter={StaticResource DateTimeToStringConverter}}" />
                </Grid>
                <Grid Visibility="{Binding IsMovieOrStill, Converter={StaticResource BoolToVis}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="labels"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Label Content="{Resx _videoFormat}" />
                    <ComboBox  ItemsSource="{Binding VideoFormats}" SelectedValue="{Binding VideoFormat}" />
                </Grid>
                <Grid Visibility="{Binding IsPersistentMedia, Converter={StaticResource BoolToVis}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="labels"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Label Content="{Resx _emphasis}" />
                    <ComboBox ItemsSource="{Binding MediaEmphasises}" SelectedValue="{Binding MediaEmphasis}" >
                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ComboBoxItem}">
                                <Setter Property="Background" Value="{Binding Converter={StaticResource MediaEmphasisToBrush}}" />
                            </Style>
                        </ComboBox.ItemContainerStyle>
                    </ComboBox>
                </Grid>
                <StackPanel Visibility="{Binding IsMovie, Converter={StaticResource BoolToVis}}">
                    <Grid Visibility="{Binding IsPersistentMedia, Converter={StaticResource InvertedBoolToVis}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="labels"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                            <Label  Content="{Resx _tCStart}" />
                            <controls:TimecodeEdit Timecode="{Binding TcStart}" VideoFormat="{Binding VideoFormat}" IsReadOnly="True" />
                            <Label Grid.Row="1" Content="{Resx _duration}" />
                            <controls:TimecodeEdit Grid.Row="1" Timecode="{Binding Duration}" VideoFormat="{Binding VideoFormat}" IsReadOnly="True"/>
                    </Grid>
                    <Grid Visibility="{Binding IsPersistentMedia, Converter={StaticResource BoolToVis}}" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="labels"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0" Grid.ColumnSpan="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="labels"/>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Label Content="{Resx _times}"/>
                            <Label Grid.Column="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Content="{Resx _clip}" Width="Auto"/>
                            <Label Grid.Column="2" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" Content="{Resx _play}" Width="Auto" />
                            <Label Grid.Row="1" Content="{Resx _tCStart}" />
                            <controls:TimecodeEdit Grid.Row="1" Timecode="{Binding TcStart}" VideoFormat="{Binding VideoFormat}" />
                            <controls:TimecodeEdit Grid.Row="1" Grid.Column="2" Timecode="{Binding TcPlay}" VideoFormat="{Binding VideoFormat}" />
                            <Label Grid.Row="2" Content="{Resx _duration}" />
                            <controls:TimecodeEdit Grid.Row="2" Timecode="{Binding Duration, ValidatesOnDataErrors=True}" VideoFormat="{Binding VideoFormat}" />
                            <controls:TimecodeEdit Grid.Row="2" Grid.Column="2" Timecode="{Binding DurationPlay, ValidatesOnDataErrors=True}" VideoFormat="{Binding VideoFormat}" />
                        </Grid>
                        <!--<DockPanel Visibility="{Binding IsIngestDataShown, Converter={StaticResource BoolToVis}}">
                <Label Style="{StaticResource fieldNameLabels}" Content="Ostatnio użyty" />
                <TextBox IsReadOnly="True" Text="{Binding LastAccess, Mode=OneWay, Converter={StaticResource DateTimeToString}, ConverterParameter=g}" />
            </DockPanel>
                        <Label Grid.Row="1" Content="{Resx _audioChannelMappings}" />
                        <ComboBox Grid.Row="1" ItemsSource="{Binding AudioChannelMappings}" SelectedValue="{Binding AudioChannelMapping}" />
                        -->
                        <Label Grid.Row="2" Content="{Resx _category}" />
                        <ComboBox Grid.Row="2" ItemsSource="{Binding MediaCategories}" SelectedValue="{Binding MediaCategory}" >
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Width="12" Style="{StaticResource MediaCategoryImage}"/>
                                        <TextBlock Margin="2, 0, 0, 0" Text="{Binding}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <Grid Grid.Row="3" Grid.ColumnSpan="2" Visibility="{Binding ShowParentalCombo, Converter={StaticResource BoolToVis}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="labels"/>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Label Content="{Resx _parental}" />
                            <ComboBox ItemsSource="{Binding Parentals}" DisplayMemberPath="Name" SelectedValue="{Binding Parental}" SelectedValuePath="Id" />
                        </Grid>
                        <CheckBox Grid.Row="4" IsChecked="{Binding IsKillDate}" Content="{Resx _killDate}" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                        <DatePicker Grid.Row="4" Grid.Column="1"  IsEnabled="{Binding IsKillDate}" Margin="5, 3" SelectedDate="{Binding KillDate}" SelectedDateFormat="Short" />
                        <Label Grid.Row="5"  Content="{Resx _audioVolume}" />
                        <Grid Grid.Column="1" Grid.Row="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Slider Margin="2" Minimum="-18" Maximum="18" Value="{Binding AudioVolume}"/>
                            <TextBox Grid.Column="1" Margin="4" Width="40" Text="{Binding AudioVolume, StringFormat={}{0:0.0}}" />
                            <Label Width="Auto" Grid.Column="2" VerticalContentAlignment="Center" Content="dB" />
                            <Button Grid.Column="3" Height="21" Margin="0, 0, 5, 0" ToolTip="{Resx _checkVolume.ToolTip}" Command="{Binding CommandCheckVolume}">
                                <controls:AutoGreyableImage Source="/TAS.Client.Common;component/Images/Actions/volume-measure.png" />
                            </Button>
                        </Grid>
                        <CheckBox Grid.Row="6" Grid.Column="1" Visibility="{Binding IsInterlaced, Converter={StaticResource BoolToVis}}" IsChecked="{Binding FieldOrderInverted}" Content="{Resx _fieldOrderInverted}" ToolTip="{Resx _fieldOrderInverted.ToolTip}"/>
                        <Label Grid.Row="7" Content="{Resx _externalId}" />
                        <TextBox Grid.Row="7" Text="{Binding IdAux, UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>
                </StackPanel>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="labels"/>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Label Content="{Resx _status}" />
                    <TextBox Text="{Binding MediaStatus, Mode=OneWay}" IsReadOnly="True" />
                    <Button Grid.Column="2" Margin="5, 0" Padding="0" Height="21" Command="{Binding CommandRefreshStatus}" ToolTip="{Resx _checkStatus.ToolTip}" >
                        <controls:AutoGreyableImage Source="/TAS.Client.Common;component/Images/Actions/view-refresh.png" />
                    </Button>
                </Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="labels"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <CheckBox Grid.Column="1" Content="{Resx _protect}" Visibility="{Binding IsPersistentMedia, Converter={StaticResource BoolToVis}}" IsChecked="{Binding IsProtected}" />
                    <CheckBox Grid.Row="1" Grid.Column="1" Content="{Resx _hasTransparency}" IsChecked="{Binding HasTransparency, Mode=OneWay}" Focusable="False" IsHitTestVisible="False"/>
                    <Label Grid.Row="2" Content="{Resx _mediaType}" />
                    <TextBox Grid.Row="2" Text="{Binding MediaType, Mode=OneWay}" IsReadOnly="True" />
                    <Label Grid.Row="3" Content="{Resx _fileName}" />
                    <TextBox Grid.Row="3" Text="{Binding FileName, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                    <Label Grid.Row="4" Content="{Resx _mediaGuid}" />
                    <TextBox Grid.Row="4" Text="{Binding MediaGuid, Mode=OneWay}" IsReadOnly="True" />
                </Grid>
                <ContentControl Content="{Binding TemplatedEditViewmodel}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type vm:TemplatedEditViewmodel}">
                            <views:TemplatedEditView/>
                        </DataTemplate>
                    </ContentControl.Resources>
                </ContentControl>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</UserControl>
