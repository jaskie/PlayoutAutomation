<Window Language="{UICulture}" ResxExtension.DefaultResxName="TAS.Client.Views.MediaSearchView"
        x:Class="TAS.Client.Views.MediaSearchView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:common="clr-namespace:TAS.Client.Common;assembly=TAS.Client.Common"
        xmlns:controls="clr-namespace:TAS.Client.Common.Controls;assembly=TAS.Client.Common"
        xmlns:vm="clr-namespace:TAS.Client.ViewModels"
        xmlns:views="clr-namespace:TAS.Client.Views"
        xmlns:behaviors="clr-namespace:TAS.Client.Common.Behaviors;assembly=TAS.Client.Common"
        mc:Ignorable="d" 
        Height="450"
        Width="750"
        FontSize="12" 
        Title="{Resx _windowTitle}"
        DataContextChanged="Window_DataContextChanged"
        FocusManager.FocusedElement="{Binding ElementName=TbSearch}"
        d:DataContext="{d:DesignInstance vm:MediaSearchViewModel}"
        >
    <Grid Width="Auto">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Label Grid.Column="0" Content="{Resx _search}" HorizontalAlignment="Center" VerticalAlignment="Center" />
            <StackPanel Grid.Column="3" DockPanel.Dock="Right" Height="35" Orientation="Horizontal">
                <Button Style="{StaticResource CancelButtonStyle}" Click="BtnClose_OnClick"/>
                <Button Command="{Binding CommandAdd}" Click="ButtonOk_OnClick" IsDefault="True" Margin="5" MinWidth="90">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="Content" Value="{Resx Key= _ok, ResxName=TAS.Client.Views.MediaSearchView}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsDialog}" Value="False">
                                    <Setter Property="Content" Value="{Resx _add, ResxName=TAS.Client.Views.MediaSearchView}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
            <ComboBox Grid.Column="2" DockPanel.Dock="Right" Width="130" VerticalAlignment="Center" ItemsSource="{Binding MediaCategories}" SelectedValue="{Binding MediaCategory}" Visibility="{Binding IsMovie, Converter={StaticResource BoolToVis}}" >
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Image Width="13" Style="{StaticResource MediaCategoryImage}"/>
                            <TextBlock Margin="2, 0, 0, 0" Text="{Binding}"/>
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <TextBox Grid.Column="1" Name="TbSearch" VerticalAlignment="Center" Text="{Binding SearchText, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}" PreviewKeyDown="tbSearch_KeyDown" Margin="5" >
                <i:Interaction.Behaviors>
                    <behaviors:Focus SelectAllOnFocus="True"/>
                </i:Interaction.Behaviors>
            </TextBox>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <ContentControl Content="{Binding Preview}" Grid.Column="1" Visibility="{Binding IsMovie, Converter={StaticResource BoolToVis}}">
                <ContentControl.Resources>
                    <DataTemplate DataType="{x:Type vm:PreviewViewModel}" >
                        <views:PreviewView Width="330"/>
                    </DataTemplate>
                </ContentControl.Resources>
            </ContentControl>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition />
                </Grid.RowDefinitions>
                <UniformGrid Columns="2">
                    <CheckBox Margin="5" IsChecked="{Binding ShowExpired}" Content="{Resx _showExpired}"/>
                    <CheckBox Margin="5" IsChecked="{Binding Engine.EnableCGElementsForNewEvents}" Content="{Resx _enableCGForNewEvents}" Visibility="{Binding CanEnableCGElements, Converter={StaticResource BoolToVis}}"/>
                    <CheckBox Margin="5" IsChecked="{Binding Engine.StudioMode}" Visibility="{Binding IsMovie, Converter={StaticResource BoolToVis}}" Content="{Resx _studioMode}" />
                </UniformGrid>
                <DataGrid  
                    x:Name="gSearch" 
                    Grid.Row="1"
                    SelectionUnit="FullRow" 
                    SelectionMode="Single" 
                    AutoGenerateColumns="False" 
                    ColumnWidth="Auto"
                    ItemsSource="{Binding Items}" 
                    SelectedItem="{Binding SelectedItem}" 
                    SelectionChanged="DataGrid_SelectionChanged" 
                    Sorting="DataGrid_OnSorting"
                    IsReadOnly="True"
                    RowHeaderWidth="0">
                    <DataGrid.Resources>
                        <common:BindingProxy x:Key="proxy" Data="{Binding}"/>
                        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
                        <ControlTemplate x:Key="ToggleButtonTemplate" TargetType="ToggleButton">
                            <Grid
                                    Width="15"
                                    Height="13"
                                    Background="Transparent">
                                <Path x:Name="ExpandPath"
                                          HorizontalAlignment="Left" 
                                          VerticalAlignment="Center" 
                                          Margin="1,1,1,1"
                                          Fill="{StaticResource GlyphBrush}"
                                          Data="M 4 0 L 8 4 L 4 8 Z"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked"
                                             Value="True">
                                    <Setter Property="Data"
                                                TargetName="ExpandPath"
                                                Value="M 0 4 L 8 4 L 4 8 Z"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                        <Style x:Key="ToggleButtonStyle" TargetType="ToggleButton">
                            <Setter Property="Template" Value="{StaticResource ToggleButtonTemplate}" />
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Setter Property="DetailsVisibility" Value="{Binding IsExpanded, Converter={StaticResource BoolToVis}}" />
                            <Setter Property="common:MouseDoubleClick.Command" Value="{Binding ElementName=gSearch, Path=DataContext.CommandAdd}" />
                            <Setter Property="Background" Value="{Binding MediaEmphasis, Converter={StaticResource MediaEmphasisToBrush}}" />
                            <EventSetter Event="MouseDoubleClick" Handler="ButtonOk_OnClick"/>
                        </Style>
                    </DataGrid.RowStyle>
                    <DataGrid.Columns>
                        <DataGridTemplateColumn x:Name="toggleColumn" CanUserResize="False" Width="20" SortMemberPath="HasSegments" >
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ToggleButton Visibility="{Binding HasSegments, Converter={StaticResource BoolToVis}}" IsChecked="{Binding IsExpanded, UpdateSourceTrigger=PropertyChanged}" Width="14" Height="14" Style="{StaticResource ToggleButtonStyle}"  />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn x:Name="isTrimmedColumn" Width="20" CanUserResize="False" Visibility="{Binding Data.IsMovie, Source={StaticResource proxy}, Converter={StaticResource BoolToVis}}" SortMemberPath="IsTrimmed">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Image x:Name="trimmedImage" Height="16" />
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding IsTrimmed}" Value="True">
                                            <Setter Property="Source" TargetName="trimmedImage" Value="/TAS.Client.Common;component/Images/Indicators/scizors.png" />
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Width="10" x:Name="categoryColumn" CanUserResize="False" Visibility="{Binding Data.IsShowCategoryColumn, Source={StaticResource proxy}, Converter={StaticResource BoolToVis}}" SortMemberPath="MediaCategory">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Image DataContext="{Binding MediaCategory}" Style="{StaticResource MediaCategoryImage}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn x:Name="clipNameColumn" Header="{Resx ResxName=TAS.Client.Views.MediaSearchView, Key=_grid.Header.ClipName}" Width="3*" SortMemberPath="MediaName" >
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding MediaName, Mode=OneWay}">
                                        <TextBlock.Style >
                                            <Style TargetType="TextBlock">
                                                <Setter Property="ToolTip" Value="{Binding FileName}"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsExpired}" Value="True">
                                                        <Setter Property="TextDecorations" Value="Strikethrough"/>
                                                        <Setter Property="Background" Value="Crimson"/>
                                                        <Setter Property="ToolTip" Value="{Resx ResxName=TAS.Client.Views.MediaManagerView, Key=_media.ClipName.IsExpired}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn x:Name="folderColumn" Header="{Resx ResxName=TAS.Client.Views.MediaSearchView, Key=_grid.Header.Folder}" Width="Auto" Binding="{Binding Folder, Mode=OneWay}" Visibility="{Binding Data.IsRecursive, Source={StaticResource proxy}, Converter={StaticResource BoolToVis}}"/>
                        <DataGridTextColumn x:Name="ingestDateColumn" Header="{Resx ResxName=TAS.Client.Views.MediaSearchView, Key=_grid.Header.IngestDate}" Binding="{Binding LastUpdated, StringFormat=g, Mode=OneWay}" Width="120" />
                        <DataGridTemplateColumn x:Name="durationColumn" Header="{Resx ResxName=TAS.Client.Views.MediaSearchView, Key=_grid.Header.Duration}" Visibility="{Binding Data.IsMovie, Source={StaticResource proxy}, Converter={StaticResource BoolToVis}}" SortMemberPath="DurationPlay" Width="75">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <controls:TimecodeTextBlock Timecode="{Binding DurationPlay}" VideoFormat="{Binding VideoFormat}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                    <DataGrid.RowDetailsTemplate >
                        <DataTemplate>
                            <ListView ItemsSource="{Binding MediaSegments}" SelectionMode="Single" SelectedItem="{Binding SelectedSegment}" Background="#FFE0EFFF" BorderThickness="0" SelectionChanged="ListView_SelectionChanged">
                                <ListView.View>
                                    <GridView >
                                        <GridView.ColumnHeaderContainerStyle>
                                            <Style TargetType="GridViewColumnHeader">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </Style>
                                        </GridView.ColumnHeaderContainerStyle>
                                        <GridViewColumn Width="{Binding ElementName=toggleColumn, Path=ActualWidth}" >
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate />
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Width="{Binding ElementName=categoryColumn, Path=ActualWidth}" >
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate />
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Width="{Binding ElementName=isTrimmedColumn, Path=ActualWidth}"  >
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate />
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn DisplayMemberBinding="{Binding SegmentName, Mode=OneWay}" Width="{Binding ElementName=clipNameColumn, Path=ActualWidth}" TextBlock.TextAlignment="Left" />
                                        <GridViewColumn Width="{Binding ElementName=folderColumn, Path=ActualWidth}">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate />
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Width="{Binding ElementName=ingestDateColumn, Path=ActualWidth}">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate />
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Width="{Binding ElementName=durationColumn, Path=ActualWidth}" >
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <controls:TimecodeTextBlock TextAlignment="Left" Timecode="{Binding Duration}" VideoFormat="{Binding VideoFormat}"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </DataTemplate>
                    </DataGrid.RowDetailsTemplate>
                </DataGrid>
            </Grid>
        </Grid>
    </Grid>
</Window>
