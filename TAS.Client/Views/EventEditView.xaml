<UserControl ResxExtension.DefaultResxName="TAS.Client.Views.EventEditView" Language="{UICulture}" 
             x:Class="TAS.Client.Views.EventEditView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="clr-namespace:TAS.Client.Common.Controls;assembly=TAS.Client.Common"
             xmlns:behaviors="clr-namespace:TAS.Client.Common.Behaviors;assembly=TAS.Client.Common"
             xmlns:vm="clr-namespace:TAS.Client.ViewModels"
             xmlns:views="clr-namespace:TAS.Client.Views"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             mc:Ignorable="d" 
             d:DesignWidth="360"
             d:DesignHeight="630"
             BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey }}"
             >
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid Row="0" Height="37">
            <Grid.Resources>
                <Style TargetType="Button">
                    <Setter Property="Margin" Value="5"/>
                </Style>
                <Style TargetType="Image" >
                    <Setter Property="Margin" Value="5, 0"/>
                </Style>
            </Grid.Resources>
            <StackPanel Orientation="Horizontal">
                <Button ToolTip="{Resx _moveUp.ToolTip}" Command="{Binding CommandMoveUp}" >
                    <controls:AutoGreyableImage Source="/TAS.Client.Common;component/Images/Actions/go-up.png" />
                </Button>
                <Button ToolTip="{Resx _moveDown.ToolTip}" Command="{Binding CommandMoveDown}">
                    <controls:AutoGreyableImage Source="/TAS.Client.Common;component/Images/Actions/go-down.png" />
                </Button>
                <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="5, 2"/>
                <Button ToolTip="{Resx _delete.ToolTip}" Command="{Binding CommandDelete}">
                    <controls:AutoGreyableImage Source="/TAS.Client.Common;component/Images/Actions/delete.png" />
                </Button>

            </StackPanel>
            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal" >
                <Button IsCancel="True" ToolTip="{Resx _buttonCancel.ToolTip}" Command="{Binding CommandUndoEdit}" Style="{StaticResource UndoButtonStyle}"/>
                <Button IsDefault="True" ToolTip="{Resx _buttonSave.ToolTip}" Command="{Binding CommandSaveEdit}" Style="{StaticResource OkButtonStyle}" />
            </StackPanel>
        </Grid>
        <ScrollViewer Grid.Row="1" Padding="2" VerticalScrollBarVisibility="Auto">
            <ScrollViewer.Resources>
                <Style TargetType="Label">
                    <Setter Property="Padding" Value="3 0"/>
                    <Setter Property="HorizontalContentAlignment" Value="Right"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                </Style>
                <Style TargetType="controls:TimecodeEdit">
                    <Setter Property="Margin" Value="1"/>
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="ToolTip"
                                    Value="{Binding RelativeSource={RelativeSource Self}, 
                                    Path=(Validation.Errors)/ErrorContent}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="TextBox" >
                    <Setter Property="Margin" Value="1"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Trigger.Setters>
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors)/ErrorContent}"/>
                            </Trigger.Setters>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="CheckBox">
                    <Setter Property="Width" Value="75"/>
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="Margin" Value="10, 3, 3, 0"/>
                </Style>
                <Style TargetType="ComboBox">
                    <Setter Property="Margin" Value="1"/>
                    <Setter Property="Padding" Value="2,1"/>
                </Style>
            </ScrollViewer.Resources>
            <Grid IsSharedSizeScope="True" IsEnabled="{Binding IsEditEnabled}" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Labels"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Label Grid.Row="0" Grid.Column="0" Content="{Resx _eventType}"/>
                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding EventType}" IsEnabled="False" />
                <Label Grid.Row="1" Grid.Column="0" Content="{Resx _name}"/>
                <TextBox Grid.Row="1" Grid.Column="1" Name="EventName" Text="{Binding EventName, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="{Resx _eventName.ToolTip}">
                    <i:Interaction.Behaviors>
                        <behaviors:Focus IsFocused="{Binding IsEventNameFocused}" SelectAllOnFocus="True" />
                    </i:Interaction.Behaviors>
                </TextBox>
                <ContentControl Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Visibility="{Binding IsContainer, Converter={StaticResource BoolToVis}}" Content="{Binding EventRightsEditViewModel}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type vm:EventRightsEditViewModel}">
                            <views:EventRightsEditView/>
                        </DataTemplate>
                    </ContentControl.Resources>
                </ContentControl>
                <Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Visibility="{Binding IsContainer, Converter={StaticResource InvertedBoolToVis}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Labels"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <CheckBox Grid.Row="0" Grid.Column="0" Content="{Resx _starting}" IsChecked="{Binding IsEnabled}" HorizontalContentAlignment="Right" VerticalAlignment="Center" ToolTip="{Resx _starting.ToolTip}" />
                    <Grid Grid.Row="0" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Row="0" Grid.Column="0" Text="{Binding StartType}" IsReadOnly="True" />
                        <Button Grid.Row="0" Grid.Column="1" Height="20" Margin="5" Visibility="{Binding IsStartEvent, Converter={StaticResource BoolToVis}}" Command="{Binding CommandTriggerStartType}" Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}">
                            <Image>
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding StartType}" Value="Manual">
                                                <Setter Property="Source" Value="/TAS.Client.Common;component/Images/EventActions/clock-play.png"/>
                                                <Setter Property="ToolTip" Value="{Resx _setStartTypeToFixedTime.ToolTip, ResxName=TAS.Client.Views.EventEditView}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding StartType}" Value="OnFixedTime">
                                                <Setter Property="Source" Value="/TAS.Client.Common;component/Images/EventActions/clock-stop.png"/>
                                                <Setter Property="ToolTip" Value="{Resx _setStartTypeToManual.ToolTip, ResxName=TAS.Client.Views.EventEditView}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </Button>
                    </Grid>
                    <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding BoundEventName, Mode=OneWay}" IsReadOnly="True" Visibility="{Binding IsStartEvent, Converter={StaticResource InvertedBoolToVis}}"/>
                    <Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Visibility="{Binding IsAutoStartEvent, Converter={StaticResource BoolToVis}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Labels" />
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Label Content="Autostart"/>
                        <CheckBox Grid.Column="1" Content="{Resx _autoStartForced}" ToolTip="{Resx _autoStartForced.ToolTip}" IsChecked="{Binding AutoStartForced}" Margin="1,3" Width="110"/>
                        <CheckBox Grid.Column="2" Content="{Resx _autoStartEveryday}" IsChecked="{Binding AutoStartDaily}" Margin="1,3" Width="Auto" />
                    </Grid>
                    <Grid Grid.Row="3" Grid.Column="1" Visibility="{Binding IsPrimaryEvent, Converter={StaticResource BoolToVis}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <CheckBox Grid.Column="0" Content="{Resx _hold}" IsChecked="{Binding IsHold}" IsEnabled="{Binding CanHold}" ToolTip="{Resx _hold.ToolTip}"  Margin="1,3" Width="110"/>
                        <CheckBox Grid.Column="1" Content="{Resx _loop}" IsChecked="{Binding IsLoop}" IsEnabled="{Binding CanLoop}" Margin="1,3" />
                    </Grid>

                    <Grid Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0" Visibility="{Binding IsContainer, Converter={StaticResource InvertedBoolToVis}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="Labels" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Label Content="{Resx _scheduledTime}" />
                            <DatePicker Grid.Column="1" Margin="1" Height="20" Padding="0" 
                                            SelectedDate="{Binding ScheduledDate, ValidatesOnDataErrors=True}" 
                                            Visibility="{Binding IsScheduledDateVisible, Converter={StaticResource BoolToVis}}" 
                                            SelectedDateFormat="Short" >
                                <DatePicker.Resources>
                                    <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}"/>
                                </DatePicker.Resources>
                                <DatePicker.Style>
                                    <Style TargetType="DatePicker">
                                        <Style.Triggers>
                                            <Trigger Property="Validation.HasError" Value="True">
                                                <Trigger.Setters>
                                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors)/ErrorContent}"/>
                                                </Trigger.Setters>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DatePicker.Style>
                            </DatePicker>
                            <Label Grid.Column="2" Content="{Resx _at}" Width="Auto"/>
                            <controls:TimecodeEdit VerticalContentAlignment="Center" Grid.Column="3" Timecode="{Binding ScheduledTimeOfDay, ValidatesOnDataErrors=True}" VideoFormat="{Binding VideoFormat}" />
                        </Grid>
                        <Grid Grid.Row="1" Visibility="{Binding IsPrimaryEvent, Converter={StaticResource BoolToVis}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="Labels" />
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="{Resx _requiredAt}" />
                            <xctk:MaskedTextBox Grid.Column="1" AutoSelectBehavior="OnFocus" Text="{Binding RequestedStartTime, UpdateSourceTrigger=PropertyChanged}" Mask="00:00:00" ToolTip="{Resx _requiredAt.ToolTip}" Margin="1" VerticalAlignment="Center" />
                        </Grid>
                        <Grid Grid.Row="2" Visibility="{Binding IsMovie, Converter={StaticResource BoolToVis}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="Labels" />
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="{Resx _clip}" />
                            <TextBox Grid.Column="1" Text="{Binding Media.FileName, Mode=OneWay}" IsReadOnly="True" VerticalContentAlignment="Center" Background="#F0F0F0" />
                            <Button Grid.Column="2" Height="20" Margin="5" ToolTip="{Resx _editMovie.ToolTip}" Command="{Binding CommandEditMovie}">
                                <controls:AutoGreyableImage Source="/TAS.Client.Common;component/Images/Actions/edit.png" />
                            </Button>
                            <Button Grid.Column="3" Height="20" Margin="5" ToolTip="{Resx _changeMovie.ToolTip}" Command="{Binding CommandChangeMovie}">
                                <controls:AutoGreyableImage Source="/TAS.Client.Common;component/Images/Actions/select.png" />
                            </Button>
                        </Grid>
                        <Grid Grid.Row="3" >
                            <Grid.Visibility>
                                <MultiBinding Converter="{StaticResource MultiBooleanOrNotNullToVisibilityConverter}">
                                    <Binding Path="IsLive"/>
                                    <Binding Path="VideoSwitch"/>
                                </MultiBinding>
                            </Grid.Visibility>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="Labels" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Label Margin="5" Content="{Resx _inputPort}" VerticalAlignment="Center" />
                            <ComboBox Grid.Column="1" ItemsSource="{Binding Sources}" SelectedItem="{Binding SelectedSource}" IsEnabled="{Binding VideoSwitch.IsConnected}" MinWidth="100" VerticalAlignment="Center">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <ComboBoxItem>
                                            <ComboBoxItem.Style>
                                                <Style TargetType="ComboBoxItem">
                                                    <Setter Property="Content" Value="{Binding PortName}" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding}" Value="">
                                                            <Setter Property="Content" Value="{Resx _noInputPort, ResxName=TAS.Client.Views.EventEditView}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ComboBoxItem.Style>
                                        </ComboBoxItem>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </Grid>
                        <Grid Grid.Row="4" Visibility="{Binding IsPrimaryMovieOrLive, Converter={StaticResource BoolToVis}}" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Labels" />
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="2*"/>
                                </Grid.ColumnDefinitions>
                                <Label Content="{Resx _duration}" />
                                <controls:TimecodeEdit Grid.Column="1" Timecode="{Binding Duration, ValidatesOnDataErrors=True}" VideoFormat="{Binding VideoFormat}" IsEnabled="{Binding IsDurationEnabled}" Height="21" VerticalAlignment="Top" />
                                <Grid Grid.Column="2" Visibility="{Binding IsMovie, Converter={StaticResource BoolToVis}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="Labels"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Label Content="{Resx _scheduledTC}" />
                                    <controls:TimecodeEdit Grid.Column="1" Timecode="{Binding ScheduledTc, ValidatesOnDataErrors=True}" VideoFormat="{Binding VideoFormat}" />
                                </Grid>
                            </Grid>
                            <Grid Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Labels" />
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="{Resx _transitionType}" />
                                <Grid Grid.Column="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <ComboBox Width="Auto" ItemsSource="{Binding TransitionTypes}" SelectedValue="{Binding TransitionType}" />
                                    <Grid Grid.Column="1" Grid.ColumnSpan="2" Visibility="{Binding IsTransitionPropertiesVisible,Converter={StaticResource BoolToVis}}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Label Width="Auto" Content="{Resx _easingType}"/>
                                        <ComboBox Grid.Column="1" Width="Auto" ItemsSource="{Binding TransitionEasings}" SelectedValue="{Binding TransitionEasing}"/>
                                    </Grid>
                                </Grid>
                            </Grid>
                            <Grid Grid.Row="2" Visibility="{Binding IsTransitionPropertiesVisible,Converter={StaticResource BoolToVis}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Labels" />
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="{Resx _transitionLength}" ToolTip="{Resx _transitionLength.ToolTip}" />
                                <controls:FrameEdit Grid.Column="1" Timecode="{Binding TransitionTime, ValidatesOnDataErrors=True}" VideoFormat="{Binding VideoFormat}" />
                                <Label Grid.Column="2" Width="Auto" Content="{Resx _transitionPauseLength}" ToolTip="{Resx _transitionPauseLength.ToolTip}" />
                                <controls:FrameEdit Grid.Column="3" Timecode="{Binding TransitionPauseTime, ValidatesOnDataErrors=True}" VideoFormat="{Binding VideoFormat}" />
                            </Grid>
                            <Grid Grid.Row="3">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Labels" />
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <CheckBox Content="{Resx _audioVolume}" HorizontalContentAlignment="Right" Padding="3 0" IsChecked="{Binding HasAudioVolume}" ToolTip="{Resx _audioVolume.ToolTip}" />
                                <Slider Grid.Column="1" VerticalAlignment="Center" Minimum="-18" Maximum="18" Value="{Binding AudioVolumeLevel}"/>
                                <TextBox Grid.Column="2" Width="40" Text="{Binding AudioVolumeLevel, StringFormat={}{0:0.0}, UpdateSourceTrigger=LostFocus}"/>
                                <Label Grid.Column="3" VerticalAlignment="Center" Content="dB" Width="25" />
                                <Button Grid.Column="4" Height="20" Margin="5" ToolTip="{Resx _checkVolume.ToolTip}" Command="{Binding CommandCheckVolume}">
                                    <controls:AutoGreyableImage Source="/TAS.Client.Common;component/Images/Actions/volume-measure.png" />
                                </Button>
                            </Grid>
                            <Grid Grid.Row="4">
                                <Grid.Visibility>
                                    <MultiBinding Converter="{StaticResource MultiBooleanOrNotNullToVisibilityConverter}">
                                        <Binding Path="IsLive"/>
                                        <Binding Path="RecordingInfoViewModel"/>
                                    </MultiBinding>                                    
                                </Grid.Visibility>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                </Grid.RowDefinitions>
                                <CheckBox IsChecked="{Binding RecordingInfoViewModel.IsRecordingScheduled}" Content="{Resx _isRecordingScheduled}" Margin="10,5,0,0" />
                                <Grid Grid.Row="1" Visibility="{Binding IsRecordingScheduled, Converter={StaticResource BoolToVis}}" DataContext="{Binding RecordingInfoViewModel}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto" />
                                        <RowDefinition Height="auto" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="Labels" />
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Label Content="{Resx _recorderName}" />
                                    <ComboBox Grid.Column="1" VerticalAlignment="Center" SelectedItem="{Binding SelectedRecorder}" DisplayMemberPath="RecorderName" ItemsSource="{Binding Recorders}" />
                                    <Label Grid.Row="1" Content="{Resx _recorderChannel}" />
                                    <ComboBox Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" ItemsSource="{Binding SelectedRecorder.Channels}" DisplayMemberPath="ChannelName" SelectedItem="{Binding SelectedRecorderChannel}" />
                                </Grid>
                            </Grid>
                            <Grid Grid.Row="5" Visibility="{Binding IsDisplayCGElements, Converter={StaticResource BoolToVis}}" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Labels" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <CheckBox Content="CG" IsChecked="{Binding IsCGEnabled}" VerticalAlignment="Top" Margin="10,5,0,0" ToolTip="{Resx _isCgEnabled.ToolTip}" />
                                <UniformGrid Grid.Column="1" Columns="2" Visibility="{Binding IsCGEnabled, Converter={StaticResource BoolToVis}}">
                                    <Grid Visibility="{Binding Logos.Length, Converter={StaticResource NonZeroToVisibilityConverter}}" >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Label Content="{Resx _gpiLogo}" />
                                        <ComboBox Grid.Column="1" ItemsSource="{Binding Logos}" DisplayMemberPath="Name" SelectedValuePath="Id" SelectedValue="{Binding Logo}" Width="Auto"/>
                                    </Grid>
                                    <Grid Visibility="{Binding Crawls.Length, Converter={StaticResource NonZeroToVisibilityConverter}}" >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Label Content="{Resx _gpiCrawl}" Width="44"/>
                                        <ComboBox Grid.Column="1" ItemsSource="{Binding Crawls}" DisplayMemberPath="Name" SelectedValuePath="Id" SelectedValue="{Binding Crawl}" Width="Auto"/>
                                    </Grid>
                                    <Grid Visibility="{Binding Parentals.Length, Converter={StaticResource NonZeroToVisibilityConverter}}" >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Label Content="{Resx _gpiParental}"/>
                                        <ComboBox Grid.Column="1" ItemsSource="{Binding Parentals}" DisplayMemberPath="Name" SelectedValuePath="Id" SelectedValue="{Binding Parental}" Width="Auto"/>
                                    </Grid>
                                </UniformGrid>
                            </Grid>
                        </Grid>
                        <Grid Grid.Row="5" Visibility="{Binding IsSecondaryMovieOrLive, Converter={StaticResource BoolToVis}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="Labels"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Label Content="{Resx _duration}" />
                            <controls:TimecodeEdit Grid.Column="1" Timecode="{Binding Duration}" VideoFormat="{Binding VideoFormat}" IsEnabled="{Binding IsDurationEnabled}"  />
                        </Grid>
                        <Grid Grid.Row="6" Visibility="{Binding IsDisplayBindToEnd, Converter={StaticResource BoolToVis}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="Labels" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="{Resx _scheduledDelay}" />
                            <controls:TimecodeEdit Grid.Column="1" Timecode="{Binding ScheduledDelay}" VideoFormat="{Binding VideoFormat}" />
                            <CheckBox Grid.Column="2" Content="{Resx _fromEnd}" IsChecked="{Binding BindToEnd}" />
                        </Grid>
                        <Grid Grid.Row="7" Visibility="{Binding IsCommandScript, Converter={StaticResource BoolToVis}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="Labels" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Label Content="{Resx _command}" />
                            <TextBox Grid.Column="1" Text="{Binding Command, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" ToolTip="{Resx _command.ToolTip}"/>
                        </Grid>
                        <ContentControl Grid.Row="8" Content="{Binding TemplatedEditViewModel}">
                            <ContentControl.Resources>
                                <DataTemplate DataType="{x:Type vm:TemplatedEditViewModel}">
                                    <views:TemplatedEditView />
                                </DataTemplate>
                            </ContentControl.Resources>
                        </ContentControl>
                    </Grid>

                </Grid>
            </Grid>
        </ScrollViewer>
    </Grid>
</UserControl>
